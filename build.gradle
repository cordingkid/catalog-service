plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	// 스프링 클라우드 버전
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// 설정 서버와 통합하기 위한 스프링 클라우드 클라이언트
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	// 서버 연결 재시도 스프링 리트라이
	implementation 'org.springframework.retry:spring-retry'
	// 새로고침 이벤트를 트리거하는 의존성
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootRun {
	systemProperty 'spring.profiles.active', 'testdata'
}

tasks.named('test') {
	useJUnitPlatform()
}
